// <auto-generated />
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
namespace MediawikiTranslator.Models.Data.MHRS
{

	public partial class HuntingHorn
	{
		[JsonProperty("snow.equip.HornBaseUserData", NullValueHandling = NullValueHandling.Ignore)]
		public SnowEquipHornBaseUserData SnowEquipHornBaseUserData { get; set; }

		public static Weapon[] Fetch()
		{
			return FromJson(File.ReadAllText(@"D:\MH_Data Repo\MH_Data\Raw Data\MHRS\natives\stm\data\define\player\weapon\horn\hornbasedata.user.2.json")).SnowEquipHornBaseUserData.Param;
		}
	}

	public partial class SnowEquipHornBaseUserData
	{
		[JsonProperty("_Param", NullValueHandling = NullValueHandling.Ignore)]
		public HuntingHornParam[] Param { get; set; }
	}

	public partial class HuntingHornParam : Weapon
	{
		[JsonProperty("_HornMelodyTypeList", NullValueHandling = NullValueHandling.Ignore)]
		public string[] HornMelodyTypeList { get; set; }
	}

	public partial class HuntingHorn
	{
		public static HuntingHorn FromJson(string json) => JsonConvert.DeserializeObject<HuntingHorn>(json, MediawikiTranslator.Models.Data.MHRS.HuntingHornConverter.Settings);
	}

	internal static class HuntingHornConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
